package com.blogspot.androidgaidamak.acustomgooglesearchclient.provider.favourite;

import java.util.Date;

import android.content.ContentResolver;
import android.net.Uri;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.blogspot.androidgaidamak.acustomgooglesearchclient.provider.base.AbstractContentValues;

/**
 * Content values wrapper for the {@code favourite} table.
 */
public class FavouriteContentValues extends AbstractContentValues {
    @Override
    public Uri uri() {
        return FavouriteColumns.CONTENT_URI;
    }

    /**
     * Update row(s) using the values stored by this object and the given selection.
     *
     * @param contentResolver The content resolver to use.
     * @param where The selection to use (can be {@code null}).
     */
    public int update(ContentResolver contentResolver, @Nullable FavouriteSelection where) {
        return contentResolver.update(uri(), values(), where == null ? null : where.sel(), where == null ? null : where.args());
    }

    /**
     * Link to thumbnail image (generated by google).
     */
    public FavouriteContentValues putThumbnailLink(@NonNull String value) {
        if (value == null) throw new IllegalArgumentException("thumbnailLink must not be null");
        mContentValues.put(FavouriteColumns.THUMBNAIL_LINK, value);
        return this;
    }


    /**
     * Link to real image (the big one).
     */
    public FavouriteContentValues putDisplayLink(@NonNull String value) {
        if (value == null) throw new IllegalArgumentException("displayLink must not be null");
        mContentValues.put(FavouriteColumns.DISPLAY_LINK, value);
        return this;
    }


    public FavouriteContentValues putTitle(@NonNull String value) {
        if (value == null) throw new IllegalArgumentException("title must not be null");
        mContentValues.put(FavouriteColumns.TITLE, value);
        return this;
    }

}
